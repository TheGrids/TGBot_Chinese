name: Build & Deploy Telegram Bot

on:
  push:
    branches:
      - main
      - dev

env:
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "TAG=prod" >> $GITHUB_ENV
            echo "PORT=8080" >> $GITHUB_ENV
            echo "CONTAINER_NAME=tgbot-chinese-prod" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
            echo "TAG=dev" >> $GITHUB_ENV
            echo "PORT=8081" >> $GITHUB_ENV
            echo "CONTAINER_NAME=tgbot-chinese-dev" >> $GITHUB_ENV
          fi

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.TAG }}

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ env.IMAGE_NAME }}:${{ env.TAG }}
            docker stop ${{ env.CONTAINER_NAME }} || true
            docker rm ${{ env.CONTAINER_NAME }} || true
            docker image prune -f

            echo '${{ secrets['ENV_FILE_' + env.ENVIRONMENT.toUpperCase()] }}' > /tmp/.env

            docker run -d \
              --name ${{ env.CONTAINER_NAME }} \
              --restart unless-stopped \
              -p ${{ env.PORT }}:8080 \
              --env-file /tmp/.env \
              ${{ env.IMAGE_NAME }}:${{ env.TAG }}

